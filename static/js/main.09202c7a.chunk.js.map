{"version":3,"sources":["components/Footer.js","components/Currency/CurrencyTable.js","containers/CurrencyTable.js","env.js","components/Currency/CurrencyLineChart.js","containers/CurrencyChart.js","utils/colors.js","components/Currency/CurrencyControls.js","components/Currency/CurrencyBaseDropdown.js","components/Currency/CurrencyCheckboxs.js","components/ErrorModal.js","components/LoadingSpinner.js","axios.js","containers/Currencies.js","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Button","variant","href","CurrencyTable","memo","pages","page","setPage","prevPage","nextPage","thead","tbody","Table","responsive","striped","bordered","hover","map","item","key","date","prices","currency","id","JSON","stringify","text","Pagination","First","onClick","Prev","Ellipsis","Item","active","Next","Last","CurrecyTable","React","history","dates","Object","keys","Math","ceil","length","useState","index","forEach","push","linePrices","values","v4","createPage","sort","a","b","Date","parsed","obj","counter","splitHistory","prev","CurrencyLineChart","data","options","parseLineDate","currencies","first","labels","value","currenciesKeys","datasets","color","randomBetween","min","max","floor","random","r","g","randomRgba","label","backgroundColor","borderColor","CurrencyChart","ref","useRef","parseHistory","div","parseData","throttleHistory","canvas","current","querySelector","url","toDataURL","download","buttons","CurrencyControls","startAt","endAt","setStartAt","setEndAt","updateDate","period","today","moment","format","subtract","ButtonGroup","aria-label","bind","Form","Label","Control","onChange","e","target","type","name","CurrencyBaseDropdown","availableCurrencies","setBase","base","Dropdown","Toggle","Menu","CurrencyCheckboxs","selectCurrency","selectedCurrencies","checked","findIndex","Check","defaultChecked","ErrorModal","show","error","onClose","Modal","onHide","centered","Header","closeButton","Title","Body","LoadingSpinner","style","zIndex","position","width","height","top","left","transform","Spinner","animation","role","instance","axios","create","baseURL","fetchAvailableCurrencies","setError","get","response","rates","fetchHistoryData","toString","Currencies","loading","setLoading","setAvailableCurrencies","setHistory","setSelectedCurrencies","useEffect","then","catch","err","errorMessage","Container","fluid","Row","Col","lg","parseCurrencies","filter","App","Navbar","Brand","aria-controls","Collapse","Nav","Link","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.09202c7a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"p-4 d-flex algin-items-center justify-content-center\">\n      <Button variant=\"link\" href=\"https://exchangeratesapi.io/\">\n        Source\n      </Button>\n      <Button\n        variant=\"link\"\n        href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\"\n      >\n        Data sets\n      </Button>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { memo } from \"react\";\nimport { Table, Pagination } from \"react-bootstrap\";\n\nconst CurrencyTable = memo(\n  ({ pages, page, setPage, prevPage, nextPage, thead, tbody }) => {\n    return (\n      <div className=\"my-4\">\n        <div className=\"my-4\">\n          <h2>Table</h2>\n          <h3>Total pages: {pages}</h3>\n        </div>\n\n        <Table responsive striped bordered hover>\n          <thead>\n            <tr>\n              {thead.map((item) => (\n                <th key={item}>{item}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {tbody.map((item) => (\n              <tr key={item.date}>\n                <td>{item.date}</td>\n                {item.prices.map((currency) => (\n                  <td key={currency.id}>{JSON.stringify(currency.text)}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n\n        {pages && pages > 1 ? (\n          <Pagination className=\"d-flex align-items-center justify-content-center\">\n            <Pagination.First onClick={() => setPage(0)} />\n            <Pagination.Prev onClick={prevPage} />\n            <Pagination.Ellipsis />\n\n            <Pagination.Item active>{page + 1}</Pagination.Item>\n\n            <Pagination.Ellipsis />\n            <Pagination.Next onClick={nextPage} />\n            <Pagination.Last onClick={() => setPage(pages - 1)} />\n          </Pagination>\n        ) : null}\n      </div>\n    );\n  }\n);\n\nexport default CurrencyTable;\n","import React, { useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport { ITEMS_IN_TABLE } from \"../env\";\nimport Table from \"../components/Currency/CurrencyTable\";\n\nconst splitHistory = (history) => {\n  const dates = Object.keys(history);\n\n  dates.sort((a, b) => new Date(b) - new Date(a));\n\n  const parsed = [];\n  let obj = {};\n\n  let counter = 0;\n  dates.forEach((date) => {\n    counter += 1;\n    obj[date] = history[date];\n\n    if (counter === ITEMS_IN_TABLE) {\n      parsed.push(obj);\n      obj = {};\n      counter = 0;\n    }\n  });\n\n  parsed.push(obj);\n\n  return parsed;\n};\n\nconst createPage = (history) => {\n  const dates = Object.keys(history);\n  const tbody = [];\n  const thead = [\"DATE\"];\n  const index = dates[dates.length - 1];\n  if (index) {\n    Object.keys(history[index]).forEach((currency) => {\n      thead.push(currency);\n    });\n  }\n  dates.forEach((date) => {\n    const linePrices = [];\n    Object.values(history[date]).forEach((item) => {\n      linePrices.push({\n        text: item,\n        id: v4(),\n      });\n    });\n    tbody.push({\n      date,\n      prices: linePrices,\n    });\n  });\n  return {\n    thead,\n    tbody,\n  };\n};\n\nconst CurrecyTable = React.memo(({ history }) => {\n  const dates = Object.keys(history);\n  const pages = Math.ceil(dates.length / ITEMS_IN_TABLE);\n  const [page, setPage] = useState(pages);\n\n  const parsed = splitHistory(history);\n\n  const { thead, tbody } = createPage(parsed[page]);\n\n  const prevPage = () => {\n    setPage((prev) => {\n      if (prev > 0) {\n        return prev - 1;\n      }\n      return prev;\n    });\n  };\n\n  const nextPage = () => {\n    setPage((prev) => {\n      if (prev < pages - 1) {\n        return prev + 1;\n      }\n      return prev;\n    });\n  };\n\n  return (\n    <Table\n      pages={pages}\n      page={page}\n      setPage={setPage}\n      prevPage={prevPage}\n      nextPage={nextPage}\n      thead={thead}\n      tbody={tbody}\n    />\n  );\n});\n\nexport default CurrecyTable;\n","const THROTTLE_VALUE = 30;\nconst ITEMS_IN_TABLE = 20;\n\nexport { THROTTLE_VALUE, ITEMS_IN_TABLE };\n","import React, { memo } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst CurrencyLineChart = memo(({ data }) => {\n  return <Line data={data} options={{ responsive: true }} />;\n});\n\nexport default CurrencyLineChart;\n","import React, { memo, useRef } from \"react\";\nimport { THROTTLE_VALUE } from \"../env\";\nimport CurrencyLineChart from \"../components/Currency/CurrencyLineChart\";\n\nimport { Button } from \"react-bootstrap\";\n\nimport { randomRgba } from \"../utils/colors\";\n\nconst parseLineDate = (history) => {\n  const currencies = {};\n\n  let first = true;\n\n  const labels = Object.keys(history);\n\n  labels.sort((a, b) => new Date(a) - new Date(b));\n\n  labels.forEach((date) => {\n    const keys = Object.keys(history[date]);\n    if (keys.length > 0) {\n      if (first) {\n        keys.forEach((key) => {\n          currencies[key] = [{ value: history[date][key], date }];\n        });\n        first = false;\n      } else {\n        keys.forEach((key) => {\n          currencies[key].push({ value: history[date][key], date });\n        });\n      }\n    }\n  });\n\n  const currenciesKeys = Object.keys(currencies);\n  const datasets = [];\n  currenciesKeys.forEach((currency) => {\n    const data = currencies[currency].map((item) => item.value);\n    const color = randomRgba();\n    datasets.push({\n      label: currency,\n      backgroundColor: color,\n      borderColor: color,\n      data,\n    });\n  });\n\n  return {\n    labels,\n    datasets,\n  };\n};\n\nconst throttleHistory = (history) => {\n  const keys = Object.keys(history);\n  const div = Math.ceil(keys.length / THROTTLE_VALUE);\n  let counter = 0;\n  const parseData = {};\n  keys.forEach((key) => {\n    if (counter === div) {\n      parseData[key] = history[key];\n      counter = 0;\n    } else {\n      counter += 1;\n    }\n  });\n  return parseData;\n};\n\nconst CurrencyChart = memo(({ history }) => {\n  const ref = useRef(null);\n\n  const parseHistory = throttleHistory(history);\n  const data = parseLineDate(parseHistory);\n\n  const download = () => {\n    const canvas = ref.current.querySelector(\"canvas\");\n    const a = ref.current.querySelector(\"a\");\n    const url = canvas.toDataURL(\"image/png\");\n    a.href = url;\n    a.download = \"chart.png\";\n  };\n\n  return (\n    <div ref={ref}>\n      <CurrencyLineChart data={data} />\n      <Button variant=\"link\" href=\"/\" onClick={download}>\n        Download\n      </Button>\n    </div>\n  );\n});\n\nexport default CurrencyChart;\n","const randomRgba = () => {\n  const randomBetween = (min, max) =>\n    min + Math.floor(Math.random() * (max - min + 1));\n  const r = randomBetween(0, 255);\n  const g = randomBetween(0, 255);\n  const b = randomBetween(100, 255);\n  return `rgb(${r},${g},${b})`;\n};\n\nexport { randomRgba };\n","import React from \"react\";\nimport { ButtonGroup, Button, Form } from \"react-bootstrap\";\n\nimport moment from \"moment\";\n\nconst buttons = {\n  MONTHS_1: \"MONTHS_1\",\n  MONTHS_3: \"MONTHS_3\",\n  MONTHS_6: \"MONTHS_6\",\n  YEARS_1: \"YEARS_1\",\n  YEARS_5: \"YEARS_5\",\n  MAX: \"MAX\",\n};\n\nconst CurrencyControls = ({ startAt, endAt, setStartAt, setEndAt }) => {\n  const updateDate = (period) => {\n    const today = moment().format(\"YYYY-MM-DD\");\n    switch (period) {\n      case buttons.MONTHS_1:\n        setStartAt(moment().subtract(1, \"months\").format(\"YYYY-MM-DD\"));\n        setEndAt(today);\n        break;\n      case buttons.MONTHS_3:\n        setStartAt(moment().subtract(3, \"months\").format(\"YYYY-MM-DD\"));\n        setEndAt(today);\n        break;\n      case buttons.MONTHS_6:\n        setStartAt(moment().subtract(6, \"months\").format(\"YYYY-MM-DD\"));\n        setEndAt(today);\n        break;\n      case buttons.YEARS_1:\n        setStartAt(moment().subtract(1, \"years\").format(\"YYYY-MM-DD\"));\n        setEndAt(today);\n        break;\n      case buttons.YEARS_5:\n        setStartAt(moment().subtract(5, \"years\").format(\"YYYY-MM-DD\"));\n        setEndAt(today);\n        break;\n      case buttons.MAX:\n        setStartAt(\"1999-01-04\");\n        setEndAt(today);\n        break;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"mb-4\">\n        <h3>Select period</h3>\n        <ButtonGroup aria-label=\"Date period\">\n          <Button onClick={updateDate.bind(null, buttons.MONTHS_1)}>1M</Button>\n          <Button onClick={updateDate.bind(null, buttons.MONTHS_3)}>3M</Button>\n          <Button onClick={updateDate.bind(null, buttons.MONTHS_6)}>6M</Button>\n          <Button onClick={updateDate.bind(null, buttons.YEARS_1)}>1R</Button>\n          <Button onClick={updateDate.bind(null, buttons.YEARS_5)}>5L</Button>\n          <Button onClick={updateDate.bind(null, buttons.MAX)}>Max</Button>\n        </ButtonGroup>\n      </div>\n      <h3>Custom</h3>\n      <Form className=\"mb-4\">\n        <Form.Label>startAt</Form.Label>\n        <Form.Control\n          onChange={(e) => setStartAt(e.target.value)}\n          value={startAt}\n          type=\"date\"\n          name=\"startAt\"\n        />\n        <Form.Label>endAt</Form.Label>\n        <Form.Control\n          onChange={(e) => setEndAt(e.target.value)}\n          value={endAt}\n          type=\"date\"\n          name=\"endAt\"\n        />\n      </Form>\n    </>\n  );\n};\n\nexport default CurrencyControls;\n","import React from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nconst CurrencyBaseDropdown = ({ availableCurrencies, setBase, base }) => {\n  return (\n    <Dropdown className=\"mb-4\">\n      <h3>Base: {base}</h3>\n      <Dropdown.Toggle id=\"dropdown-currencies\">Switch Base</Dropdown.Toggle>\n      <Dropdown.Menu>\n        {availableCurrencies.map((value) => (\n          <Dropdown.Item\n            active={value === base}\n            key={value}\n            onClick={setBase.bind(null, value)}\n          >\n            {value}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default CurrencyBaseDropdown;\n","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst CurrencyCheckboxs = ({\n  availableCurrencies,\n  selectCurrency,\n  selectedCurrencies,\n}) => {\n  const parseData = [];\n\n  availableCurrencies.forEach((currency) => {\n    let checked = false;\n    const index = selectedCurrencies.findIndex((item) => item === currency);\n    if (index !== -1) {\n      checked = true;\n    }\n    parseData.push({\n      currency,\n      checked,\n    });\n  });\n\n  return (\n    <div className=\"mb-4\">\n      <h3>Select currencies</h3>\n      <Form>\n        {parseData.map((item) => (\n          <Form.Check\n            key={item.currency}\n            defaultChecked={item.checked}\n            label={item.currency}\n            type=\"checkbox\"\n            onClick={selectCurrency.bind(null, item.currency)}\n          />\n        ))}\n      </Form>\n    </div>\n  );\n};\n\nexport default CurrencyCheckboxs;\n","import React from \"react\";\n\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst ErrorModal = ({ show, error, onClose }) => {\n  return (\n    <Modal show={show} onHide={onClose} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Error message</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{error}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={onClose}>\n          Ok\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst LoadingSpinner = ({ show }) => {\n  return (\n    <div\n      style={{\n        zIndex: 100,\n        position: \"fixed\",\n        width: \"100px\",\n        height: \"100px\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      {show ? (\n        <Spinner\n          animation=\"border\"\n          role=\"status\"\n          style={{\n            position: \"relative\",\n            width: \"100px\",\n            height: \"100px\",\n          }}\n        >\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : null}\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.exchangeratesapi.io\",\n});\n\nexport default instance;\n","import React, { useState, useEffect } from \"react\";\n\nimport CurrencyTable from \"./CurrencyTable\";\nimport CurrencyChart from \"./CurrencyChart\";\n\nimport CurrencyButtons from \"../components/Currency/CurrencyControls\";\nimport CurrencyBaseDropdown from \"../components/Currency/CurrencyBaseDropdown\";\nimport CurrencyCheckboxs from \"../components/Currency/CurrencyCheckboxs\";\n\nimport ErrorModal from \"../components/ErrorModal\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nimport { Row, Col, Container } from \"react-bootstrap\";\n\nimport moment from \"moment\";\nimport axios from \"../axios\";\n\nconst fetchAvailableCurrencies = async (setError) => {\n  const response = await axios.get(`/latest`);\n\n  const { rates } = response.data;\n\n  const currencies = Object.keys(rates);\n\n  return currencies;\n};\n\nconst fetchHistoryData = async (startAt, endAt, base, selectedCurrencies) => {\n  if (selectedCurrencies.length <= 0) {\n    return [];\n  }\n  const response = await axios.get(\n    `/history?start_at=${startAt}&end_at=${endAt}&base=${base}&symbols=${selectedCurrencies.toString()}`\n  );\n\n  const data = response.data.rates;\n  const parseData = {};\n  const dates = Object.keys(data);\n  dates.forEach((date) => {\n    parseData[date] = data[date];\n  });\n  return parseData;\n};\n\nconst Currencies = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [availableCurrencies, setAvailableCurrencies] = useState([]);\n  const [history, setHistory] = useState([]);\n  const today = moment(new Date()).format(\"YYYY-MM-DD\");\n  const [startAt, setStartAt] = useState(\"2019-04-01\");\n  const [endAt, setEndAt] = useState(today);\n  const [base, setBase] = useState(\"EUR\");\n  const [selectedCurrencies, setSelectedCurrencies] = useState([\"PLN\"]);\n\n  useEffect(() => {\n    fetchAvailableCurrencies(setError)\n      .then((data) => {\n        setAvailableCurrencies(data);\n        setLoading(false);\n      })\n      .catch((err) => setError(\"Server error\"));\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchHistoryData(startAt, endAt, base, selectedCurrencies)\n      .then((data) => {\n        setHistory(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        const errorMessage = `Symbols '${selectedCurrencies.toString()}' are invalid.`;\n        if (err.response || err.response.data.error === errorMessage) {\n          setError(\n            `No historical data reduce the time period or remove the last currency.`\n          );\n        } else {\n          setError(\"Server error\");\n        }\n        setLoading(false);\n        return [];\n      });\n  }, [base, startAt, endAt, selectedCurrencies]);\n\n  const selectCurrency = (name) => {\n    let parseCurrencies = [...selectedCurrencies];\n\n    const index = parseCurrencies.findIndex((item) => item === name);\n\n    if (index !== -1) {\n      parseCurrencies = parseCurrencies.filter((item) => item !== name);\n    } else {\n      parseCurrencies.push(name);\n    }\n\n    setSelectedCurrencies(parseCurrencies);\n  };\n\n  return (\n    <Container fluid>\n      <LoadingSpinner show={loading} />\n      <ErrorModal\n        show={error ? true : false}\n        error={error}\n        onClose={() => setError(null)}\n      />\n      <h1>Currencies</h1>\n      <Row>\n        <Col lg=\"8\">\n          <CurrencyChart history={history} />\n        </Col>\n        <Col lg=\"4\" className=\"my-4\">\n          <Row>\n            <Col>\n              <CurrencyBaseDropdown\n                availableCurrencies={availableCurrencies}\n                base={base}\n                setBase={setBase}\n              />\n              <CurrencyButtons\n                startAt={startAt}\n                endAt={endAt}\n                setStartAt={setStartAt}\n                setEndAt={setEndAt}\n              />\n            </Col>\n            <Col>\n              <CurrencyCheckboxs\n                availableCurrencies={availableCurrencies}\n                selectedCurrencies={selectedCurrencies}\n                selectCurrency={selectCurrency}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <CurrencyTable history={history} />\n    </Container>\n  );\n};\n\nexport default Currencies;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Footer from \"./components/Footer\";\nimport Currencies from \"./containers/Currencies\";\n\nexport default function App() {\n  return (\n    <Router>\n      <Navbar>\n        <Navbar.Brand href=\"/\">Currencies</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-Navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"https://exchangeratesapi.io/\">Source</Nav.Link>\n            <Nav.Link href=\"https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html\">\n              Data sets\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Switch>\n        <Route path=\"/\">\n          <Currencies />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}